package animalshelter;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

public class ShelterGui extends javax.swing.JFrame {

    public static String loginName;
    public static String loginPassword;
    public static boolean loginAuthority;

    DefaultTableModel modelCat;
    DefaultTableModel modelBird;
    DefaultTableModel modelDog;

    DatabaseOperations databaseOperations = new DatabaseOperations();

    // HashMap<String, String> animalInfos = new HashMap<String, String>();
    /**
     * Creates new form ShelterGui
     */
    public ShelterGui(String usernameLogined, String passwordLogined, boolean authorityLogined) {

        loginName = usernameLogined;
        loginPassword = passwordLogined;
        loginAuthority = authorityLogined;

        System.out.println(loginName + loginPassword + loginAuthority);

        initComponents();
        //setExtendedState(JFrame.MAXIMIZED_BOTH);
        //customCursor();

        addScreenCatPanel.setVisible(true);
        addScreenBirdPanel.setVisible(false);
        addScreenDogPanel.setVisible(false);

        displayScreenCatPanel.setVisible(false);
        displayScreenBirdPanel.setVisible(false);
        displayScreenDogPanel.setVisible(false);

        modelCat = (DefaultTableModel) displayCatTable.getModel();
        modelBird = (DefaultTableModel) displayBirdTable.getModel();
        modelDog = (DefaultTableModel) displayDogTable.getModel();

        showTable();
    }

    class jPanelGradient extends JPanel {

        protected void paintComponent(Graphics g) {
            Graphics2D g2d = (Graphics2D) g;
            int width = getWidth();
            int height = getHeight();

            Color c1 = new Color(204, 0, 204);
            Color c2 = new Color(0, 204, 204);
            GradientPaint gp = new GradientPaint(0, 0, c1, 180, height, c2);
            g2d.setPaint(gp);
            g2d.fillRect(0, 0, width, height);

        }
    }

    class jPanelGradient2 extends JPanel {

        protected void paintComponent(Graphics g) {
            Graphics2D g2d = (Graphics2D) g;
            int width = getWidth();
            int height = getHeight();

            Color c1 = new Color(255, 0, 0);
            Color c2 = new Color(0, 153, 0);
            GradientPaint gp = new GradientPaint(0, 0, c1, 180, height, c2);
            g2d.setPaint(gp);
            g2d.fillRect(0, 0, width, height);

        }
    }

    public void customCursor() {
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Image img = toolkit.getImage("icon.png");
        Point point = new Point(0, 0);
        Cursor cursor = toolkit.createCustomCursor(img, point, "icon");

        setCursor(cursor);
    }

    public void switchPanel(JPanel panel) {
        Pannels.removeAll();
        Pannels.add(panel);
        Pannels.repaint();
        Pannels.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        Menu = new jPanelGradient();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        github = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        logOutButton = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Content = new javax.swing.JPanel();
        Pannels = new javax.swing.JPanel();
        HomeScreen = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        AddAnimalScreen = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        addAnimalWarningMessage = new javax.swing.JLabel();
        healthText = new javax.swing.JLabel();
        addScreenTypeCat = new javax.swing.JRadioButton();
        addScreenTypeBird = new javax.swing.JRadioButton();
        addScreenTypeDog = new javax.swing.JRadioButton();
        jLabel21 = new javax.swing.JLabel();
        sterilizeYes = new javax.swing.JRadioButton();
        sterilizeNo = new javax.swing.JRadioButton();
        jLabel20 = new javax.swing.JLabel();
        genderMale = new javax.swing.JRadioButton();
        genderFemale = new javax.swing.JRadioButton();
        jLabel18 = new javax.swing.JLabel();
        animalLength = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        animalWeight = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        animalAge = new javax.swing.JTextField();
        animalName = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        addAnimalButton = new javax.swing.JButton();
        addScreenBirdPanel = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        isTalkBirdYes = new javax.swing.JRadioButton();
        isTalkBirdNo = new javax.swing.JRadioButton();
        jLabel55 = new javax.swing.JLabel();
        strainBird = new javax.swing.JTextField();
        addScreenDogPanel = new javax.swing.JPanel();
        jLabel57 = new javax.swing.JLabel();
        strainDog = new javax.swing.JTextField();
        addScreenCatPanel = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        isAgressiveCatYes = new javax.swing.JRadioButton();
        isAgressiveCatNo = new javax.swing.JRadioButton();
        catIconLabel = new javax.swing.JLabel();
        birdIcon = new javax.swing.JLabel();
        dogIcon = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jPanel6 = new jPanelGradient2();
        jSliderAddHealth = new javax.swing.JSlider();
        jLabel22 = new javax.swing.JLabel();
        animalPlace = new javax.swing.JComboBox<>();
        DisplayAnimalsScreen = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        searchBar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        displayBirdTable = new javax.swing.JTable();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        displayCatTable = new javax.swing.JTable();
        jLabel60 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayDogTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        displayAnimalAgeInput = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        displayAnimalNameInput = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        displayAnimalWeightInput = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        displayAnimalLengthInput = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        displayAnimalGenderMale = new javax.swing.JRadioButton();
        displayAnimalGenderFemale = new javax.swing.JRadioButton();
        jLabel37 = new javax.swing.JLabel();
        displayAnimalSterilizeYes = new javax.swing.JRadioButton();
        displayAnimalSterilizeNo = new javax.swing.JRadioButton();
        jLabel42 = new javax.swing.JLabel();
        jPanel9 = new jPanelGradient2();
        jSliderUpdateHealth = new javax.swing.JSlider();
        displayAnimalPlaceCombo = new javax.swing.JComboBox<>();
        jLabel38 = new javax.swing.JLabel();
        displayScreenCatPanel = new javax.swing.JPanel();
        displayIsAgressiveCatYes = new javax.swing.JRadioButton();
        displayIsAgressiveCatNo = new javax.swing.JRadioButton();
        jLabel65 = new javax.swing.JLabel();
        displayScreenDogPanel = new javax.swing.JPanel();
        jLabel64 = new javax.swing.JLabel();
        displayStrainDog = new javax.swing.JTextField();
        displayScreenBirdPanel = new javax.swing.JPanel();
        displayIsTalkBirdYes = new javax.swing.JRadioButton();
        displayIsTalkBirdNo = new javax.swing.JRadioButton();
        jLabel63 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        displayStrainBird = new javax.swing.JTextField();
        healthUpdateText = new javax.swing.JLabel();
        findLifeTimeButton = new javax.swing.JButton();
        animalLifeTimeText = new javax.swing.JLabel();
        displayAnimalWarningMessage = new javax.swing.JLabel();
        updateDogButton = new javax.swing.JButton();
        updateBirdButton = new javax.swing.JButton();
        deleteDogButton = new javax.swing.JButton();
        deleteBirdButton = new javax.swing.JButton();
        deleteCatButton = new javax.swing.JButton();
        updateCatButton = new javax.swing.JButton();
        AboutScreen = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(250, 120, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(1400, 1000));
        setMinimumSize(new java.awt.Dimension(1400, 1000));
        setPreferredSize(new java.awt.Dimension(1400, 1000));

        Menu.setBackground(new java.awt.Color(102, 102, 102));
        Menu.setPreferredSize(new java.awt.Dimension(300, 530));

        jLabel1.setFont(new java.awt.Font("Yu Gothic Medium", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SHELTER");

        jLabel6.setBackground(new java.awt.Color(255, 0, 0));
        jLabel6.setFont(new java.awt.Font("Yu Gothic UI", 0, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Add Animal");
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI", 0, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Loupe-icon.png"))); // NOI18N
        jLabel9.setText(" Display Animal");
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI", 0, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/About.png"))); // NOI18N
        jLabel7.setText(" About Us");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        github.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        github.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        github.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                githubMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Yu Gothic Medium", 1, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ANIMAL");

        logOutButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        logOutButton.setForeground(new java.awt.Color(255, 255, 255));
        logOutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logout-icon.png"))); // NOI18N
        logOutButton.setText(" Logout");
        logOutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logOutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logOutButtonMouseClicked(evt);
            }
        });

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setText("+");

        jLabel4.setBackground(new java.awt.Color(255, 255, 0));
        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 0, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Home.png"))); // NOI18N
        jLabel4.setText(" Home");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout MenuLayout = new javax.swing.GroupLayout(Menu);
        Menu.setLayout(MenuLayout);
        MenuLayout.setHorizontalGroup(
            MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuLayout.createSequentialGroup()
                .addGroup(MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MenuLayout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(github, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MenuLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(MenuLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MenuLayout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MenuLayout.setVerticalGroup(
            MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logOutButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(github, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Content.setLayout(new java.awt.CardLayout());

        Pannels.setLayout(new java.awt.CardLayout());

        HomeScreen.setBackground(new java.awt.Color(255, 255, 255));
        HomeScreen.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/unnamed.jpg"))); // NOI18N

        jLabel24.setFont(new java.awt.Font("Yu Gothic Medium", 1, 24)); // NOI18N
        jLabel24.setText("Animal Shelter Management System");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 51)));

        jLabel13.setFont(new java.awt.Font("Yu Gothic Medium", 2, 18)); // NOI18N
        jLabel13.setText("In this system, the needs of the animals are checked and their deficiencies are completed accordingly.");

        jLabel25.setFont(new java.awt.Font("Yu Gothic Medium", 2, 18)); // NOI18N
        jLabel25.setText("Their health status, development processes (height, weight, breeding), ");

        jLabel27.setFont(new java.awt.Font("Yu Gothic Medium", 2, 18)); // NOI18N
        jLabel27.setText("their instant location are checked weekly and entered into the system by the employees.");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jLabel27))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(jLabel25)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 37, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(30, 30, 30))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel27)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout HomeScreenLayout = new javax.swing.GroupLayout(HomeScreen);
        HomeScreen.setLayout(HomeScreenLayout);
        HomeScreenLayout.setHorizontalGroup(
            HomeScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeScreenLayout.createSequentialGroup()
                .addGroup(HomeScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HomeScreenLayout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addComponent(jLabel23))
                    .addGroup(HomeScreenLayout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(jLabel24))
                    .addGroup(HomeScreenLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(239, Short.MAX_VALUE))
        );
        HomeScreenLayout.setVerticalGroup(
            HomeScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeScreenLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel24)
                .addGap(79, 79, 79)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102)
                .addComponent(jLabel23)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Pannels.add(HomeScreen, "card2");

        AddAnimalScreen.setBackground(new java.awt.Color(255, 255, 255));

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI", 0, 24)); // NOI18N
        jLabel10.setText(" Add");
        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel16.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel16.setText("Type :");

        jLabel5.setBackground(new java.awt.Color(0, 153, 0));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/m.png"))); // NOI18N

        addAnimalWarningMessage.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        addAnimalWarningMessage.setForeground(new java.awt.Color(204, 0, 0));

        healthText.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N

        addScreenTypeCat.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup3.add(addScreenTypeCat);
        addScreenTypeCat.setSelected(true);
        addScreenTypeCat.setText("Cat");
        addScreenTypeCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addScreenTypeCatActionPerformed(evt);
            }
        });

        addScreenTypeBird.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup3.add(addScreenTypeBird);
        addScreenTypeBird.setText("Bird");
        addScreenTypeBird.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addScreenTypeBirdActionPerformed(evt);
            }
        });

        addScreenTypeDog.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup3.add(addScreenTypeDog);
        addScreenTypeDog.setText("Dog");
        addScreenTypeDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addScreenTypeDogActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel21.setText("Is Steralize :");

        sterilizeYes.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(sterilizeYes);
        sterilizeYes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        sterilizeYes.setText("Yes");
        sterilizeYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sterilizeYesActionPerformed(evt);
            }
        });

        sterilizeNo.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(sterilizeNo);
        sterilizeNo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        sterilizeNo.setText("No");

        jLabel20.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel20.setText("Gender :");

        genderMale.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(genderMale);
        genderMale.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        genderMale.setText("Male");
        genderMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderMaleActionPerformed(evt);
            }
        });

        genderFemale.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(genderFemale);
        genderFemale.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        genderFemale.setText("Female");
        genderFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderFemaleActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel18.setText("Length :");

        animalLength.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel44.setFont(new java.awt.Font("Segoe UI Semilight", 2, 11)); // NOI18N
        jLabel44.setText("CM");

        jLabel19.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel19.setText("Weight :");

        animalWeight.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setFont(new java.awt.Font("Segoe UI Semilight", 2, 11)); // NOI18N
        jLabel8.setText("KG");

        jLabel17.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel17.setText("Age :");

        animalAge.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        animalName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel15.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel15.setText("Name :");

        addAnimalButton.setText("ADD");
        addAnimalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAnimalButtonActionPerformed(evt);
            }
        });

        addScreenBirdPanel.setBackground(new java.awt.Color(204, 204, 204));

        jLabel56.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel56.setText("Is Talk:");

        isTalkBirdYes.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup5.add(isTalkBirdYes);
        isTalkBirdYes.setText("Yes");

        isTalkBirdNo.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup5.add(isTalkBirdNo);
        isTalkBirdNo.setText("No");

        jLabel55.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel55.setText("Strain:");

        javax.swing.GroupLayout addScreenBirdPanelLayout = new javax.swing.GroupLayout(addScreenBirdPanel);
        addScreenBirdPanel.setLayout(addScreenBirdPanelLayout);
        addScreenBirdPanelLayout.setHorizontalGroup(
            addScreenBirdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addScreenBirdPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(addScreenBirdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel55)
                    .addComponent(jLabel56))
                .addGap(18, 18, 18)
                .addGroup(addScreenBirdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addScreenBirdPanelLayout.createSequentialGroup()
                        .addComponent(isTalkBirdYes, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(isTalkBirdNo, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(strainBird, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        addScreenBirdPanelLayout.setVerticalGroup(
            addScreenBirdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addScreenBirdPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(addScreenBirdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel56)
                    .addComponent(isTalkBirdYes)
                    .addComponent(isTalkBirdNo))
                .addGap(18, 18, 18)
                .addGroup(addScreenBirdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel55)
                    .addComponent(strainBird, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        addScreenDogPanel.setBackground(new java.awt.Color(204, 204, 204));

        jLabel57.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel57.setText("Strain:");

        javax.swing.GroupLayout addScreenDogPanelLayout = new javax.swing.GroupLayout(addScreenDogPanel);
        addScreenDogPanel.setLayout(addScreenDogPanelLayout);
        addScreenDogPanelLayout.setHorizontalGroup(
            addScreenDogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addScreenDogPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(strainDog, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );
        addScreenDogPanelLayout.setVerticalGroup(
            addScreenDogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addScreenDogPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addScreenDogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addScreenDogPanelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel57, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(addScreenDogPanelLayout.createSequentialGroup()
                        .addComponent(strainDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
        );

        addScreenCatPanel.setBackground(new java.awt.Color(204, 204, 204));

        jLabel54.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel54.setText("Is Agressive:");

        isAgressiveCatYes.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup4.add(isAgressiveCatYes);
        isAgressiveCatYes.setText("Yes");

        isAgressiveCatNo.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup4.add(isAgressiveCatNo);
        isAgressiveCatNo.setText("No");

        javax.swing.GroupLayout addScreenCatPanelLayout = new javax.swing.GroupLayout(addScreenCatPanel);
        addScreenCatPanel.setLayout(addScreenCatPanelLayout);
        addScreenCatPanelLayout.setHorizontalGroup(
            addScreenCatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addScreenCatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel54)
                .addGap(18, 18, 18)
                .addComponent(isAgressiveCatYes)
                .addGap(32, 32, 32)
                .addComponent(isAgressiveCatNo)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        addScreenCatPanelLayout.setVerticalGroup(
            addScreenCatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addScreenCatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addScreenCatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(isAgressiveCatYes)
                    .addComponent(isAgressiveCatNo))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        catIconLabel.setVisible(false);
        catIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cat.gif"))); // NOI18N
        catIconLabel.setText("jLabel14");

        birdIcon.setVisible(false);
        birdIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/tenor.gif"))); // NOI18N
        birdIcon.setText("jLabel12");

        dogIcon.setVisible(false);
        dogIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/dog.gif"))); // NOI18N
        dogIcon.setText("jLabel12");

        jLabel30.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel30.setText("Health:");

        jPanel6.setBackground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 186, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );

        jSliderAddHealth.setMajorTickSpacing(1);
        jSliderAddHealth.setMaximum(10);
        jSliderAddHealth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderAddHealthStateChanged(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel22.setText("Place : ");

        animalPlace.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        animalPlace.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D" }));
        animalPlace.setBorder(null);
        animalPlace.setPreferredSize(new java.awt.Dimension(32, 30));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(catIconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(171, 171, 171)
                                .addComponent(addAnimalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(573, 573, 573)
                                .addComponent(addAnimalWarningMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(dogIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(birdIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(healthText, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel15)
                                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel16))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addComponent(jLabel19)))))
                                .addGap(6, 6, 6))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(4, 4, 4)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(animalLength, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel44))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(sterilizeYes, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(sterilizeNo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(genderMale, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(114, 114, 114)
                                                .addComponent(genderFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(addScreenTypeCat)
                                                .addGap(18, 18, 18)
                                                .addComponent(addScreenTypeBird)
                                                .addGap(10, 10, 10)
                                                .addComponent(addScreenTypeDog)))
                                        .addGap(2, 2, 2))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(animalAge, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(animalWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(animalName, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)))
                        .addGap(77, 77, 77)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jSliderAddHealth, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel30)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(animalPlace, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jLabel5)))
                        .addGap(63, 63, 63)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addScreenBirdPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addScreenDogPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addScreenCatPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel16)
                                        .addComponent(addScreenTypeCat, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(addScreenTypeBird)
                                        .addComponent(addScreenTypeDog)
                                        .addComponent(jLabel30)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(animalName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15)))
                            .addComponent(jSliderAddHealth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17)
                                    .addComponent(animalAge, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19)
                                    .addComponent(animalWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel18)
                                    .addComponent(animalLength, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel44))
                                .addGap(14, 14, 14)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel20)
                                    .addComponent(genderMale, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(genderFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel21)
                                    .addComponent(sterilizeYes, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sterilizeNo, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel22)
                                    .addComponent(animalPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addScreenBirdPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(addScreenDogPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)))
                .addGap(3, 3, 3)
                .addComponent(addScreenCatPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(catIconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dogIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(birdIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(382, 382, 382)
                .addComponent(healthText, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addAnimalWarningMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addAnimalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(323, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AddAnimalScreenLayout = new javax.swing.GroupLayout(AddAnimalScreen);
        AddAnimalScreen.setLayout(AddAnimalScreenLayout);
        AddAnimalScreenLayout.setHorizontalGroup(
            AddAnimalScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddAnimalScreenLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(AddAnimalScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddAnimalScreenLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(AddAnimalScreenLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 1046, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        AddAnimalScreenLayout.setVerticalGroup(
            AddAnimalScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddAnimalScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Pannels.add(AddAnimalScreen, "card2");

        DisplayAnimalsScreen.setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel29.setFont(new java.awt.Font("Yu Gothic UI", 0, 24)); // NOI18N
        jLabel29.setText(" Delete - Update - Display");
        jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        searchBar.setBackground(new java.awt.Color(189, 166, 193));
        searchBar.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        searchBar.setBorder(null);
        searchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchBarKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search.png"))); // NOI18N
        jLabel3.setText("SEARCH ");

        displayBirdTable.setFont(new java.awt.Font("Yu Gothic UI", 0, 11)); // NOI18N
        displayBirdTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Age", "Gender", "Sterilize", "Length", "Weight", "Place", "Health", "Strain", "IsTalk", "Hunger Ratio", "Personnel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        displayBirdTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayBirdTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(displayBirdTable);

        jLabel58.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        jLabel58.setText("CAT");

        jLabel59.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        jLabel59.setText("BIRD");

        displayCatTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Age", "Gender", "Sterilize", "Length", "Weight", "Place", "Health", "Agressive", "Hunger Ratio", "Personnel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        displayCatTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayCatTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(displayCatTable);

        jLabel60.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        jLabel60.setText("DOG");

        displayDogTable.setFont(new java.awt.Font("Yu Gothic UI", 0, 11)); // NOI18N
        displayDogTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Age", "Gender", "Sterilize", "Length", "Weight", "Place", "Health", "Strain", "Hunger Ratio", "Personnel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        displayDogTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayDogTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(displayDogTable);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel31.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        jLabel31.setText("Name :");
        jPanel2.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));

        displayAnimalAgeInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        displayAnimalAgeInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayAnimalAgeInputActionPerformed(evt);
            }
        });
        jPanel2.add(displayAnimalAgeInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 100, 20));

        jLabel33.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        jLabel33.setText("Age :");
        jPanel2.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, -1, -1));

        displayAnimalNameInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.add(displayAnimalNameInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 100, 20));

        jLabel35.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        jLabel35.setText("Weight :");
        jPanel2.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, -1, -1));

        displayAnimalWeightInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.add(displayAnimalWeightInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 100, 20));

        jLabel34.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        jLabel34.setText("Length :");
        jPanel2.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, -1, -1));

        displayAnimalLengthInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.add(displayAnimalLengthInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 100, 20));

        jLabel11.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        jLabel11.setText("Gender :");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, -1, -1));

        displayAnimalGenderMale.setBackground(new java.awt.Color(255, 255, 255));
        displayAnimalGenderMale.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        displayAnimalGenderMale.setText("Male");
        displayAnimalGenderMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayAnimalGenderMaleActionPerformed(evt);
            }
        });
        jPanel2.add(displayAnimalGenderMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, -1, -1));

        displayAnimalGenderFemale.setBackground(new java.awt.Color(255, 255, 255));
        displayAnimalGenderFemale.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        displayAnimalGenderFemale.setText("Female");
        displayAnimalGenderFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayAnimalGenderFemaleActionPerformed(evt);
            }
        });
        jPanel2.add(displayAnimalGenderFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 66, -1));

        jLabel37.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        jLabel37.setText("Is Steralize :");
        jPanel2.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 81, -1));

        displayAnimalSterilizeYes.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(displayAnimalSterilizeYes);
        displayAnimalSterilizeYes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        displayAnimalSterilizeYes.setText("Yes");
        displayAnimalSterilizeYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayAnimalSterilizeYesActionPerformed(evt);
            }
        });
        jPanel2.add(displayAnimalSterilizeYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, -1, 20));

        displayAnimalSterilizeNo.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(displayAnimalSterilizeNo);
        displayAnimalSterilizeNo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        displayAnimalSterilizeNo.setText("No");
        jPanel2.add(displayAnimalSterilizeNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, -1, 20));

        jLabel42.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jLabel42.setText("Health:");
        jPanel2.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, -1, -1));

        jPanel9.setBackground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, -1, -1));

        jSliderUpdateHealth.setMajorTickSpacing(1);
        jSliderUpdateHealth.setMaximum(10);
        jSliderUpdateHealth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderUpdateHealthStateChanged(evt);
            }
        });
        jPanel2.add(jSliderUpdateHealth, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 137, 22));

        displayAnimalPlaceCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D" }));
        displayAnimalPlaceCombo.setPreferredSize(new java.awt.Dimension(32, 30));
        jPanel2.add(displayAnimalPlaceCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 70, 137, 24));

        jLabel38.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jLabel38.setText("Place : ");
        jPanel2.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, -1, -1));

        displayScreenCatPanel.setBackground(new java.awt.Color(204, 204, 204));

        displayIsAgressiveCatYes.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup4.add(displayIsAgressiveCatYes);
        displayIsAgressiveCatYes.setText("Yes");

        displayIsAgressiveCatNo.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup4.add(displayIsAgressiveCatNo);
        displayIsAgressiveCatNo.setText("No");

        jLabel65.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jLabel65.setText("Is Agressive:");

        javax.swing.GroupLayout displayScreenCatPanelLayout = new javax.swing.GroupLayout(displayScreenCatPanel);
        displayScreenCatPanel.setLayout(displayScreenCatPanelLayout);
        displayScreenCatPanelLayout.setHorizontalGroup(
            displayScreenCatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayScreenCatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(displayIsAgressiveCatYes)
                .addGap(18, 18, 18)
                .addComponent(displayIsAgressiveCatNo)
                .addGap(14, 14, 14))
        );
        displayScreenCatPanelLayout.setVerticalGroup(
            displayScreenCatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayScreenCatPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(displayScreenCatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayIsAgressiveCatNo)
                    .addComponent(displayIsAgressiveCatYes)
                    .addComponent(jLabel65))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel2.add(displayScreenCatPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 160, 230, 60));

        displayScreenDogPanel.setBackground(new java.awt.Color(204, 204, 204));

        jLabel64.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel64.setText("Strain:");

        javax.swing.GroupLayout displayScreenDogPanelLayout = new javax.swing.GroupLayout(displayScreenDogPanel);
        displayScreenDogPanel.setLayout(displayScreenDogPanelLayout);
        displayScreenDogPanelLayout.setHorizontalGroup(
            displayScreenDogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayScreenDogPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel64)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(displayStrainDog, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        displayScreenDogPanelLayout.setVerticalGroup(
            displayScreenDogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayScreenDogPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayScreenDogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel64)
                    .addComponent(displayStrainDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel2.add(displayScreenDogPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 230, 50));

        displayScreenBirdPanel.setBackground(new java.awt.Color(204, 204, 204));

        displayIsTalkBirdYes.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup5.add(displayIsTalkBirdYes);
        displayIsTalkBirdYes.setText("Yes");

        displayIsTalkBirdNo.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup5.add(displayIsTalkBirdNo);
        displayIsTalkBirdNo.setText("No");

        jLabel63.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        jLabel63.setText("Is Talk:");

        jLabel62.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel62.setText("Strain:");

        displayStrainBird.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayStrainBirdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout displayScreenBirdPanelLayout = new javax.swing.GroupLayout(displayScreenBirdPanel);
        displayScreenBirdPanel.setLayout(displayScreenBirdPanelLayout);
        displayScreenBirdPanelLayout.setHorizontalGroup(
            displayScreenBirdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayScreenBirdPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayScreenBirdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel62)
                    .addComponent(jLabel63))
                .addGap(18, 18, 18)
                .addGroup(displayScreenBirdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(displayScreenBirdPanelLayout.createSequentialGroup()
                        .addComponent(displayIsTalkBirdYes, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(displayIsTalkBirdNo, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(displayStrainBird))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        displayScreenBirdPanelLayout.setVerticalGroup(
            displayScreenBirdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayScreenBirdPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayScreenBirdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayStrainBird, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel62))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(displayScreenBirdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayIsTalkBirdYes)
                    .addComponent(displayIsTalkBirdNo)
                    .addComponent(jLabel63))
                .addContainerGap())
        );

        jPanel2.add(displayScreenBirdPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 230, 80));

        healthUpdateText.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        jPanel2.add(healthUpdateText, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 140, 20));

        findLifeTimeButton.setText("FIND LIFE TIME");
        findLifeTimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findLifeTimeButtonActionPerformed(evt);
            }
        });
        jPanel2.add(findLifeTimeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 130, 110, 34));
        jPanel2.add(animalLifeTimeText, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 210, 190, 30));

        displayAnimalWarningMessage.setBackground(new java.awt.Color(204, 153, 0));
        displayAnimalWarningMessage.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        displayAnimalWarningMessage.setForeground(new java.awt.Color(204, 0, 0));
        jPanel2.add(displayAnimalWarningMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 210, 220, 35));

        updateDogButton.setText("UPDATE DOG");
        updateDogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDogButtonActionPerformed(evt);
            }
        });
        jPanel2.add(updateDogButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 90, 130, 30));

        updateBirdButton.setText("UPDATE BIRD");
        updateBirdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBirdButtonActionPerformed(evt);
            }
        });
        jPanel2.add(updateBirdButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 50, 130, 30));

        deleteDogButton.setText("DELETE DOG");
        deleteDogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDogButtonActionPerformed(evt);
            }
        });
        jPanel2.add(deleteDogButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 50, 130, 30));

        deleteBirdButton.setText("DELETE BIRD");
        deleteBirdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBirdButtonActionPerformed(evt);
            }
        });
        jPanel2.add(deleteBirdButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 90, 130, 30));

        deleteCatButton.setText("DELETE CAT");
        deleteCatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCatButtonActionPerformed(evt);
            }
        });
        jPanel2.add(deleteCatButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 10, 130, 30));

        updateCatButton.setText("UPDATE CAT");
        updateCatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCatButtonActionPerformed(evt);
            }
        });
        jPanel2.add(updateCatButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 10, 130, 30));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 1049, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1003, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 912, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1003, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1003, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel60)
                            .addComponent(jLabel59)
                            .addComponent(jLabel58))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel58)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel59)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel60)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout DisplayAnimalsScreenLayout = new javax.swing.GroupLayout(DisplayAnimalsScreen);
        DisplayAnimalsScreen.setLayout(DisplayAnimalsScreenLayout);
        DisplayAnimalsScreenLayout.setHorizontalGroup(
            DisplayAnimalsScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DisplayAnimalsScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DisplayAnimalsScreenLayout.setVerticalGroup(
            DisplayAnimalsScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        Pannels.add(DisplayAnimalsScreen, "card2");

        AboutScreen.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabel61.setFont(new java.awt.Font("Yu Gothic UI", 0, 24)); // NOI18N
        jLabel61.setText(" Who We Are?");
        jLabel61.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 1049, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 50, Short.MAX_VALUE))
        );

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/man-2-icon.png"))); // NOI18N
        jLabel28.setToolTipText("");

        jLabel39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/woman-2-icon.png"))); // NOI18N
        jLabel39.setToolTipText("");

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/man-2-icon.png"))); // NOI18N
        jLabel32.setToolTipText("");

        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/man-2-icon.png"))); // NOI18N
        jLabel36.setToolTipText("");

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jLabel26.setFont(new java.awt.Font("Yu Gothic Medium", 0, 15)); // NOI18N
        jLabel26.setText("Name Surname: Kamil Birkan Tonkal");

        jLabel40.setFont(new java.awt.Font("Yu Gothic Medium", 0, 15)); // NOI18N
        jLabel40.setText("E-Mail: tonkalkamilbirkan@gmail.com ");

        jLabel41.setFont(new java.awt.Font("Yu Gothic Medium", 0, 15)); // NOI18N
        jLabel41.setText("ID: 18050111060");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40)
                            .addComponent(jLabel41))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel26)
                .addGap(4, 4, 4)
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel40))
        );

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        jLabel48.setFont(new java.awt.Font("Yu Gothic Medium", 0, 15)); // NOI18N
        jLabel48.setText("Name Surname: Mertcan Köse");

        jLabel49.setFont(new java.awt.Font("Yu Gothic Medium", 0, 15)); // NOI18N
        jLabel49.setText("E-Mail: mertcankose142@gmail.com");

        jLabel50.setFont(new java.awt.Font("Yu Gothic Medium", 0, 15)); // NOI18N
        jLabel50.setText("ID: 18050111061");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel49)
                    .addComponent(jLabel48)
                    .addComponent(jLabel50))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel48)
                .addGap(4, 4, 4)
                .addComponent(jLabel50)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel49))
        );

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        jLabel45.setFont(new java.awt.Font("Yu Gothic Medium", 0, 15)); // NOI18N
        jLabel45.setText("Name Surname: Oğuzhan Baş");

        jLabel46.setFont(new java.awt.Font("Yu Gothic Medium", 0, 15)); // NOI18N
        jLabel46.setText("E-Mail: 16050311010@ybu.edu.tr ");

        jLabel47.setFont(new java.awt.Font("Yu Gothic Medium", 0, 15)); // NOI18N
        jLabel47.setText("ID: 18050121001");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel46)
                    .addComponent(jLabel45)
                    .addComponent(jLabel47))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel45)
                .addGap(4, 4, 4)
                .addComponent(jLabel47)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel46)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        jLabel51.setFont(new java.awt.Font("Yu Gothic Medium", 0, 15)); // NOI18N
        jLabel51.setText("Name Surname: Feyza Decdeli");

        jLabel52.setFont(new java.awt.Font("Yu Gothic Medium", 0, 15)); // NOI18N
        jLabel52.setText("E-Mail: feyzadecdeli@hotmail.com");

        jLabel53.setFont(new java.awt.Font("Yu Gothic Medium", 0, 15)); // NOI18N
        jLabel53.setText("ID: 18050111062");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel52)
                    .addComponent(jLabel51)
                    .addComponent(jLabel53))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel51)
                .addGap(4, 4, 4)
                .addComponent(jLabel53)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel52)
                .addContainerGap())
        );

        javax.swing.GroupLayout AboutScreenLayout = new javax.swing.GroupLayout(AboutScreen);
        AboutScreen.setLayout(AboutScreenLayout);
        AboutScreenLayout.setHorizontalGroup(
            AboutScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AboutScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(AboutScreenLayout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 500, Short.MAX_VALUE)
                .addComponent(jLabel39)
                .addGap(269, 269, 269))
            .addGroup(AboutScreenLayout.createSequentialGroup()
                .addGroup(AboutScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AboutScreenLayout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addGroup(AboutScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(AboutScreenLayout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(jLabel36)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 329, Short.MAX_VALUE)
                .addGroup(AboutScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AboutScreenLayout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addGap(270, 270, 270))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AboutScreenLayout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(199, 199, 199))
                    .addGroup(AboutScreenLayout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        AboutScreenLayout.setVerticalGroup(
            AboutScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AboutScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(AboutScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AboutScreenLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AboutScreenLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(85, 85, 85)
                .addGroup(AboutScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel28)
                    .addComponent(jLabel39))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AboutScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        Pannels.add(AboutScreen, "card2");

        Content.add(Pannels, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Menu, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Content, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Menu, javax.swing.GroupLayout.DEFAULT_SIZE, 1243, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void showTable() {
        modelCat.setRowCount(0);
        modelBird.setRowCount(0);
        modelDog.setRowCount(0);

        ArrayList<Dog> dogs = new ArrayList<Dog>();
        ArrayList<Cat> cats = new ArrayList<Cat>();
        ArrayList<Bird> birds = new ArrayList<Bird>();

        dogs = databaseOperations.getDogs();
        cats = databaseOperations.getCats();
        birds = databaseOperations.getBirds();

        if (dogs != null) {
            for (Dog dog : dogs) {
                Object[] addedDog = {dog.getId(), dog.getName(), dog.getAge(), dog.getGender(), dog.isIsSterilize(), dog.getLength(), dog.getWeight(), dog.getPlace(), dog.getStateOfHealth(), dog.getStrain(), dog.getHungerRatio(), dog.getPersonnelName()};
                modelDog.addRow(addedDog);
            }
        }
        if (cats != null) {
            for (Cat cat : cats) {
                Object[] addedCat = {cat.getId(), cat.getName(), cat.getAge(), cat.getGender(), cat.isIsSterilize(), cat.getLength(), cat.getWeight(), cat.getPlace(), cat.getStateOfHealth(), cat.isIsAgressive(), cat.getHungerRatio(), cat.getPersonnelName()};
                modelCat.addRow(addedCat);
            }
        }
        if (birds != null) {
            for (Bird bird : birds) {
                Object[] addedDog = {bird.getId(), bird.getName(), bird.getAge(), bird.getGender(), bird.isIsSterilize(), bird.getLength(), bird.getWeight(), bird.getPlace(), bird.getStateOfHealth(), bird.getStrain(), bird.isIsTalk(), bird.getHungerRatio(), bird.getPersonnelName()};
                modelBird.addRow(addedDog);
            }
        }
    }

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        switchPanel(HomeScreen);
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        switchPanel(AddAnimalScreen);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        switchPanel(DisplayAnimalsScreen);
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        switchPanel(AboutScreen);
    }//GEN-LAST:event_jLabel7MouseClicked

    private void displayAnimalSterilizeYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayAnimalSterilizeYesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayAnimalSterilizeYesActionPerformed

    public void dynamicSearch(String search) {
        TableRowSorter<DefaultTableModel> tableRow1 = new TableRowSorter<DefaultTableModel>(modelCat);
        TableRowSorter<DefaultTableModel> tableRow2 = new TableRowSorter<DefaultTableModel>(modelBird);
        TableRowSorter<DefaultTableModel> tableRow3 = new TableRowSorter<DefaultTableModel>(modelDog);

        displayCatTable.setRowSorter(tableRow1);
        displayBirdTable.setRowSorter(tableRow2);
        displayDogTable.setRowSorter(tableRow3);

        tableRow1.setRowFilter(RowFilter.regexFilter(search));
        tableRow2.setRowFilter(RowFilter.regexFilter(search));
        tableRow3.setRowFilter(RowFilter.regexFilter(search));
    }
    private void searchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBarKeyReleased
        String search = searchBar.getText();

        dynamicSearch(search);

    }//GEN-LAST:event_searchBarKeyReleased

    private void githubMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_githubMouseClicked
        /*
        String internet_adresi = "https://github.com/mertcankose/Animal-Shelter";
        Desktop d = Desktop.getDesktop();
        try {
            d.browse(new URI(internet_adresi));
        } catch (URISyntaxException ex) {
            Logger.getLogger(WebPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(WebPage.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_githubMouseClicked

    private void displayAnimalGenderMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayAnimalGenderMaleActionPerformed
        // TODO add your handling code here:
        displayAnimalGenderFemale.setSelected(false);
    }//GEN-LAST:event_displayAnimalGenderMaleActionPerformed

    private void displayAnimalGenderFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayAnimalGenderFemaleActionPerformed
        // TODO add your handling code here:
        displayAnimalGenderMale.setSelected(false);
    }//GEN-LAST:event_displayAnimalGenderFemaleActionPerformed

    private void jSliderUpdateHealthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderUpdateHealthStateChanged
        healthUpdateText.setText(Integer.toString(jSliderUpdateHealth.getValue()));

        if (jSliderUpdateHealth.getValue() < 4) {
            healthUpdateText.setText("Diseased");
        } else if (jSliderUpdateHealth.getValue() >= 4 && jSliderUpdateHealth.getValue() < 7) {
            healthUpdateText.setText("Normal");
        } else {
            healthUpdateText.setText("Healthy");
        }
    }//GEN-LAST:event_jSliderUpdateHealthStateChanged

    private void logOutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutButtonMouseClicked
        //Logout button
        Login login1 = new Login();
        login1.setVisible(true);

        this.setVisible(false);
    }//GEN-LAST:event_logOutButtonMouseClicked

    private void displayDogTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayDogTableMouseClicked
        //screen show/hide
        displayScreenCatPanel.setVisible(false);
        displayScreenBirdPanel.setVisible(false);
        displayScreenDogPanel.setVisible(true);
        
        displayCatTable.clearSelection();
        displayBirdTable.clearSelection();

        int selectedRow = displayDogTable.getSelectedRow();

        displayAnimalNameInput.setText(modelDog.getValueAt(selectedRow, 1).toString());
        displayAnimalAgeInput.setText(modelDog.getValueAt(selectedRow, 2).toString());
        String gender = modelDog.getValueAt(selectedRow, 3).toString();

        if (gender.equals("Male")) {
            displayAnimalGenderMale.setSelected(true);
        } else if (gender.equals("Female")) {
            displayAnimalGenderFemale.setSelected(true);
        }

        String sterilize = modelDog.getValueAt(selectedRow, 4).toString();

        if (sterilize.equals("true")) {
            displayAnimalSterilizeYes.setSelected(true);
        } else if (sterilize.equals("false")) {
            displayAnimalSterilizeNo.setSelected(true);
        }

        displayAnimalLengthInput.setText(modelDog.getValueAt(selectedRow, 5).toString());
        displayAnimalWeightInput.setText(modelDog.getValueAt(selectedRow, 6).toString());
        displayAnimalPlaceCombo.setSelectedItem(modelDog.getValueAt(selectedRow, 7).toString());

        String strain = modelDog.getValueAt(selectedRow, 9).toString();
        displayStrainDog.setText(strain);

    }//GEN-LAST:event_displayDogTableMouseClicked

    private void displayBirdTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayBirdTableMouseClicked
        //screen show/hide
        displayScreenCatPanel.setVisible(false);
        displayScreenBirdPanel.setVisible(true);
        displayScreenDogPanel.setVisible(false);

        displayCatTable.clearSelection();
        displayDogTable.clearSelection();
        
        int selectedRow = displayBirdTable.getSelectedRow();

        displayAnimalNameInput.setText(modelBird.getValueAt(selectedRow, 1).toString());
        displayAnimalAgeInput.setText(modelBird.getValueAt(selectedRow, 2).toString());
        String gender = modelBird.getValueAt(selectedRow, 3).toString();

        if (gender.equals("Male")) {
            displayAnimalGenderMale.setSelected(true);
        } else if (gender.equals("Female")) {
            displayAnimalGenderFemale.setSelected(true);
        }

        String sterilize = modelBird.getValueAt(selectedRow, 4).toString();

        if (sterilize.equals("true")) {
            displayAnimalSterilizeYes.setSelected(true);
        } else if (sterilize.equals("false")) {
            displayAnimalSterilizeNo.setSelected(true);
        }

        displayAnimalLengthInput.setText(modelBird.getValueAt(selectedRow, 5).toString());
        displayAnimalWeightInput.setText(modelBird.getValueAt(selectedRow, 6).toString());
        displayAnimalPlaceCombo.setSelectedItem(modelBird.getValueAt(selectedRow, 7).toString());

        String strain = modelBird.getValueAt(selectedRow, 9).toString();
        displayStrainBird.setText(strain);
        
        String isTalk = modelBird.getValueAt(selectedRow, 10).toString();

        if (isTalk.equals("true")) {
            displayIsTalkBirdYes.setSelected(true);
        } else if (isTalk.equals("false")) {
            displayIsTalkBirdNo.setSelected(true);
        }
        
        
    }//GEN-LAST:event_displayBirdTableMouseClicked

    private void displayCatTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayCatTableMouseClicked
        //screen show/hide
        displayScreenCatPanel.setVisible(true);
        displayScreenBirdPanel.setVisible(false);
        displayScreenDogPanel.setVisible(false);
        
        displayDogTable.clearSelection();
        displayBirdTable.clearSelection();

        int selectedRow = displayCatTable.getSelectedRow();

        displayAnimalNameInput.setText(modelCat.getValueAt(selectedRow, 1).toString());
        displayAnimalAgeInput.setText(modelCat.getValueAt(selectedRow, 2).toString());
        String gender = modelCat.getValueAt(selectedRow, 3).toString();

        if (gender.equals("Male")) {
            displayAnimalGenderMale.setSelected(true);
        } else if (gender.equals("Female")) {
            displayAnimalGenderFemale.setSelected(true);
        }

        String sterilize = modelCat.getValueAt(selectedRow, 4).toString();

        if (sterilize.equals("true")) {
            displayAnimalSterilizeYes.setSelected(true);
        } else if (sterilize.equals("false")) {
            displayAnimalSterilizeNo.setSelected(true);
        }

        displayAnimalLengthInput.setText(modelCat.getValueAt(selectedRow, 5).toString());
        displayAnimalWeightInput.setText(modelCat.getValueAt(selectedRow, 6).toString());
        displayAnimalPlaceCombo.setSelectedItem(modelCat.getValueAt(selectedRow, 7).toString());

        String agressive = modelCat.getValueAt(selectedRow, 9).toString();

        if (agressive.equals("true")) {
            displayIsAgressiveCatYes.setSelected(true);
        } else if (agressive.equals("false")) {
            displayIsAgressiveCatNo.setSelected(true);
        }
    }//GEN-LAST:event_displayCatTableMouseClicked

    private void findLifeTimeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findLifeTimeButtonActionPerformed
        
    }//GEN-LAST:event_findLifeTimeButtonActionPerformed

    /*public void showpopup() {
        String message = "ADDED !\n";


        JOptionPane.showMessageDialog(this, message);
    }*/

    private void addAnimalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAnimalButtonActionPerformed

        addAnimalWarningMessage.setText("");

        
        String name = animalName.getText();

        if (name.trim().equals("")) {
            addAnimalWarningMessage.setText("Name field can't be empty!");
        } else {

            //animal age
            int age = Integer.parseInt(animalAge.getText());

            // animal gender
            String gender = "";
            if (genderFemale.isSelected()) {
                gender = "Female";
            } else if (genderMale.isSelected()) {
                gender = "Male";
            }

            // sterilize
            boolean sterilize = false;
            if (sterilizeNo.isSelected()) {
                sterilize = false;
            } else if (sterilizeYes.isSelected()) {
                sterilize = true;
            }
            //animal length - weight
            double length = Double.parseDouble(animalLength.getText());
            double weight = Double.parseDouble(animalWeight.getText());

            //animal place
            String place = (String) animalPlace.getSelectedItem();

            String health = "";

            if (jSliderAddHealth.getValue() < 4) {
                health = "Diseased";
            } else if (jSliderAddHealth.getValue() >= 4 && jSliderAddHealth.getValue() < 7) {
                health = "Normal";
            } else {
                health = "Healthy";
            }

            //agressive-cat
            boolean agressive = false;
            if (isAgressiveCatYes.isSelected()) {
                agressive = true;
            }

            //strain-bird-dog
            String birdStrain = strainBird.getText();
            String dogStrain = strainDog.getText();

            //talk-bird
            boolean isTalk = false;
            if (isTalkBirdYes.isSelected()) {
                isTalk = true;
            }

            Personnel personnel = new Personnel(loginName, loginPassword, loginAuthority);

            if (addScreenTypeCat.isSelected()) {
                databaseOperations.addCat(name, age, gender, sterilize, length, weight, place, health, agressive, 10, personnel);
                JOptionPane.showMessageDialog(this, "Our " + "cat" + " " + name + " " + "succefully added");
            }

            if (addScreenTypeBird.isSelected()) {
                databaseOperations.addBird(name, age, gender, sterilize, length, weight, place, health, birdStrain, isTalk, 10, personnel);
                JOptionPane.showMessageDialog(this, "Our " + "bird" + " " + name + " " + "succefully added");
            }
            if (addScreenTypeDog.isSelected()) {
                databaseOperations.addDog(name, age, gender, sterilize, length, weight, place, health, dogStrain, 10, personnel);
                JOptionPane.showMessageDialog(this, "Our " + "dog" + " " + name + " " + "succefully added");
            }

            showTable();

            /*
            Object[] added = {type,name,age,gender,sterilize,length,weight,place};
            model.addRow(added);
             */
        }
    }//GEN-LAST:event_addAnimalButtonActionPerformed

    private void genderFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderFemaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderFemaleActionPerformed

    private void genderMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderMaleActionPerformed

    private void sterilizeYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sterilizeYesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sterilizeYesActionPerformed

    private void jSliderAddHealthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderAddHealthStateChanged
        healthText.setText(Integer.toString(jSliderAddHealth.getValue()));

        if (jSliderAddHealth.getValue() < 4) {
            healthText.setText("Diseased");
        } else if (jSliderAddHealth.getValue() >= 4 && jSliderAddHealth.getValue() < 7) {
            healthText.setText("Normal");
        } else {
            healthText.setText("Healthy");
        }
    }//GEN-LAST:event_jSliderAddHealthStateChanged

    private void addScreenTypeDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addScreenTypeDogActionPerformed
        addScreenCatPanel.setVisible(false);
        addScreenBirdPanel.setVisible(false);
        addScreenDogPanel.setVisible(true);
        dogIcon.setVisible(true);
        catIconLabel.setVisible(false);
        birdIcon.setVisible(false);
    }//GEN-LAST:event_addScreenTypeDogActionPerformed

    private void addScreenTypeBirdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addScreenTypeBirdActionPerformed
        addScreenCatPanel.setVisible(false);
        addScreenBirdPanel.setVisible(true);
        addScreenDogPanel.setVisible(false);
        catIconLabel.setVisible(false);
        birdIcon.setVisible(true);
        dogIcon.setVisible(false);
    }//GEN-LAST:event_addScreenTypeBirdActionPerformed

    private void addScreenTypeCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addScreenTypeCatActionPerformed
        addScreenCatPanel.setVisible(true);
        addScreenBirdPanel.setVisible(false);
        addScreenDogPanel.setVisible(false);
        catIconLabel.setVisible(true);
        birdIcon.setVisible(false);
        dogIcon.setVisible(false);
        
    }//GEN-LAST:event_addScreenTypeCatActionPerformed

    private void displayAnimalAgeInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayAnimalAgeInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayAnimalAgeInputActionPerformed

    private void displayStrainBirdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayStrainBirdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayStrainBirdActionPerformed

    private void deleteDogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDogButtonActionPerformed
        displayAnimalWarningMessage.setText("");

        int selectedRow = displayDogTable.getSelectedRow();

        if (selectedRow == -1) {
            if (modelDog.getRowCount() == 0) {
                displayAnimalWarningMessage.setText("Cat table is empty!");
            } else {
                displayAnimalWarningMessage.setText("Please select dog to delete");
            }
        } else {
            int id = (int) modelDog.getValueAt(selectedRow, 0);
            databaseOperations.deleteDog(id);
            showTable();
            displayAnimalWarningMessage.setText("Sucessfully deleted");
        }
    }//GEN-LAST:event_deleteDogButtonActionPerformed

    private void deleteCatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCatButtonActionPerformed
        displayAnimalWarningMessage.setText("");

        int selectedRow = displayCatTable.getSelectedRow();

        if (selectedRow == -1) {
            if (modelCat.getRowCount() == 0) {
                displayAnimalWarningMessage.setText("Cat table is empty!");
            } else {
                displayAnimalWarningMessage.setText("Please select cat to delete");
            }
        } else {
            int id = (int) modelCat.getValueAt(selectedRow, 0);
            databaseOperations.deleteCat(id);
            showTable();
            displayAnimalWarningMessage.setText("Sucessfully deleted");
        }
    }//GEN-LAST:event_deleteCatButtonActionPerformed

    private void deleteBirdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBirdButtonActionPerformed
        displayAnimalWarningMessage.setText("");

        int selectedRow = displayBirdTable.getSelectedRow();

        if (selectedRow == -1) {
            if (modelBird.getRowCount() == 0) {
                displayAnimalWarningMessage.setText("Cat table is empty!");
            } else {
                displayAnimalWarningMessage.setText("Please select cat to delete");
            }
        } else {
            int id = (int) modelBird.getValueAt(selectedRow, 0);
            databaseOperations.deleteBird(id);
            showTable();
            displayAnimalWarningMessage.setText("Sucessfully deleted");
        }
    }//GEN-LAST:event_deleteBirdButtonActionPerformed

    private void updateCatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCatButtonActionPerformed
        
        displayAnimalWarningMessage.setText("");
        
        String name = displayAnimalNameInput.getText();
        int age = Integer.parseInt(displayAnimalAgeInput.getText());
        double length = Double.parseDouble(displayAnimalLengthInput.getText());
        double weight = Double.parseDouble(displayAnimalWeightInput.getText());
        
        String gender = "";
        if(displayAnimalGenderMale.isSelected()){
            gender = "Male";
        }else if(displayAnimalGenderFemale.isSelected()){
            gender = "Female";
        }
            
        boolean sterilize = false;
        if(displayAnimalSterilizeNo.isSelected()){
            sterilize = false;
        }
        else if(displayAnimalSterilizeYes.isSelected()){
            sterilize = true;
        }
        
        String place = displayAnimalPlaceCombo.getSelectedItem().toString();        
        
        String health = "";
        
        if(jSliderUpdateHealth.getValue()<4) {
            health = "Diseased";
        }else if(jSliderUpdateHealth.getValue()>=4 && jSliderUpdateHealth.getValue()<7 ) {
            health = "Normal";
        }else{
            health = "Healthy";    
        }
        
        boolean agressive = false;
        if(displayIsAgressiveCatYes.isSelected()){
            agressive = true;
        }else if(displayIsAgressiveCatNo.isSelected()){
            agressive = false;
        }
             
        int selectedRow = displayCatTable.getSelectedRow();
      
        if(selectedRow == -1){
            if(displayCatTable.getRowCount() == 0){
                displayAnimalWarningMessage.setText("Cat table is empty !");
            }
            else{
                displayAnimalWarningMessage.setText("Please select a cat to update !");
            }
        }
        else{
            int id = (int) modelCat.getValueAt(selectedRow, 0);
            
            databaseOperations.updateCat(id,name,age,gender,sterilize,length,weight,place,health,agressive,10);
            showTable();

            displayAnimalWarningMessage.setText("Update successfully.");
            
            
            /*
            model.setValueAt(displayAnimalTypeInput.getText(),selectedRow,1);
            model.setValueAt(displayAnimalNameInput.getText(),selectedRow,2);
            model.setValueAt(displayAnimalAgeInput.getText(),selectedRow,3);
            model.setValueAt(gender,selectedRow,4);
            model.setValueAt(sterilize,selectedRow,5);
            model.setValueAt(displayAnimalLengthInput.getText(),selectedRow,6);
            model.setValueAt(displayAnimalWeightInput.getText(),selectedRow,7);
            model.setValueAt(displayAnimalPlaceCombo.getSelectedItem().toString(),selectedRow,8);  
            */
        }       
    }//GEN-LAST:event_updateCatButtonActionPerformed

    private void updateDogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDogButtonActionPerformed
        
        displayAnimalWarningMessage.setText("");
        
        String name = displayAnimalNameInput.getText();
        int age = Integer.parseInt(displayAnimalAgeInput.getText());
        double length = Double.parseDouble(displayAnimalLengthInput.getText());
        double weight = Double.parseDouble(displayAnimalWeightInput.getText());
        
        String gender = "";
        if(displayAnimalGenderMale.isSelected()){
            gender = "Male";
        }else if(displayAnimalGenderFemale.isSelected()){
            gender = "Female";
        }
            
        boolean sterilize = false;
        if(displayAnimalSterilizeNo.isSelected()){
            sterilize = false;
        }
        else if(displayAnimalSterilizeYes.isSelected()){
            sterilize = true;
        }
        
        String place = displayAnimalPlaceCombo.getSelectedItem().toString();        
        
        String health = "";
        
        if(jSliderUpdateHealth.getValue()<4) {
            health = "Diseased";
        }else if(jSliderUpdateHealth.getValue()>=4 && jSliderUpdateHealth.getValue()<7 ) {
            health = "Normal";
        }else{
            health = "Healthy";    
        }
        
        String strain = displayStrainDog.getText();
             
        int selectedRow = displayDogTable.getSelectedRow();
      
        if(selectedRow == -1){
            if(displayDogTable.getRowCount() == 0){
                displayAnimalWarningMessage.setText("Cat table is empty !");
            }
            else{
                displayAnimalWarningMessage.setText("Please select a cat to update !");
            }
        }
        else{
            int id = (int) modelDog.getValueAt(selectedRow, 0);
            
            databaseOperations.updateDog(id,name,age,gender,sterilize,length,weight,place,health,strain,10);
            showTable();

            displayAnimalWarningMessage.setText("Update successfully.");
            
            
            /*
            model.setValueAt(displayAnimalTypeInput.getText(),selectedRow,1);
            model.setValueAt(displayAnimalNameInput.getText(),selectedRow,2);
            model.setValueAt(displayAnimalAgeInput.getText(),selectedRow,3);
            model.setValueAt(gender,selectedRow,4);
            model.setValueAt(sterilize,selectedRow,5);
            model.setValueAt(displayAnimalLengthInput.getText(),selectedRow,6);
            model.setValueAt(displayAnimalWeightInput.getText(),selectedRow,7);
            model.setValueAt(displayAnimalPlaceCombo.getSelectedItem().toString(),selectedRow,8);  
            */
        } 
    }//GEN-LAST:event_updateDogButtonActionPerformed

    private void updateBirdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBirdButtonActionPerformed
        displayAnimalWarningMessage.setText("");
        
        String name = displayAnimalNameInput.getText();
        int age = Integer.parseInt(displayAnimalAgeInput.getText());
        double length = Double.parseDouble(displayAnimalLengthInput.getText());
        double weight = Double.parseDouble(displayAnimalWeightInput.getText());
        
        String gender = "";
        if(displayAnimalGenderMale.isSelected()){
            gender = "Male";
        }else if(displayAnimalGenderFemale.isSelected()){
            gender = "Female";
        }
            
        boolean sterilize = false;
        if(displayAnimalSterilizeNo.isSelected()){
            sterilize = false;
        }
        else if(displayAnimalSterilizeYes.isSelected()){
            sterilize = true;
        }
        
        String place = displayAnimalPlaceCombo.getSelectedItem().toString();        
        
        String health = "";
        
        if(jSliderUpdateHealth.getValue()<4) {
            health = "Diseased";
        }else if(jSliderUpdateHealth.getValue()>=4 && jSliderUpdateHealth.getValue()<7 ) {
            health = "Normal";
        }else{
            health = "Healthy";    
        }
        
        String strain = displayStrainBird.getText();
        
        boolean isTalk = false;
        if(displayIsTalkBirdYes.isSelected()){
            isTalk = true;
        }else if(displayIsTalkBirdNo.isSelected()){
            isTalk = false;
        }
     
        int selectedRow = displayBirdTable.getSelectedRow();
      
        if(selectedRow == -1){
            if(displayBirdTable.getRowCount() == 0){
                displayAnimalWarningMessage.setText("Cat table is empty !");
            }
            else{
                displayAnimalWarningMessage.setText("Please select a cat to update !");
            }
        }
        else{
            int id = (int) modelBird.getValueAt(selectedRow, 0);
            
            databaseOperations.updateBird(id,name,age,gender,sterilize,length,weight,place,health,strain,isTalk,10);
            showTable();

            displayAnimalWarningMessage.setText("Update successfully.");
            
            
            /*
            model.setValueAt(displayAnimalTypeInput.getText(),selectedRow,1);
            model.setValueAt(displayAnimalNameInput.getText(),selectedRow,2);
            model.setValueAt(displayAnimalAgeInput.getText(),selectedRow,3);
            model.setValueAt(gender,selectedRow,4);
            model.setValueAt(sterilize,selectedRow,5);
            model.setValueAt(displayAnimalLengthInput.getText(),selectedRow,6);
            model.setValueAt(displayAnimalWeightInput.getText(),selectedRow,7);
            model.setValueAt(displayAnimalPlaceCombo.getSelectedItem().toString(),selectedRow,8);  
            */
        } 
    }//GEN-LAST:event_updateBirdButtonActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShelterGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShelterGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShelterGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShelterGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShelterGui("admin", "admin", true).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AboutScreen;
    private javax.swing.JPanel AddAnimalScreen;
    private javax.swing.JPanel Content;
    private javax.swing.JPanel DisplayAnimalsScreen;
    private javax.swing.JPanel HomeScreen;
    private javax.swing.JPanel Menu;
    private javax.swing.JPanel Pannels;
    private javax.swing.JButton addAnimalButton;
    private javax.swing.JLabel addAnimalWarningMessage;
    private javax.swing.JPanel addScreenBirdPanel;
    private javax.swing.JPanel addScreenCatPanel;
    private javax.swing.JPanel addScreenDogPanel;
    private javax.swing.JRadioButton addScreenTypeBird;
    private javax.swing.JRadioButton addScreenTypeCat;
    private javax.swing.JRadioButton addScreenTypeDog;
    private javax.swing.JTextField animalAge;
    private javax.swing.JTextField animalLength;
    private javax.swing.JLabel animalLifeTimeText;
    private javax.swing.JTextField animalName;
    private javax.swing.JComboBox<String> animalPlace;
    private javax.swing.JTextField animalWeight;
    private javax.swing.JLabel birdIcon;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JLabel catIconLabel;
    private javax.swing.JButton deleteBirdButton;
    private javax.swing.JButton deleteCatButton;
    private javax.swing.JButton deleteDogButton;
    private javax.swing.JTextField displayAnimalAgeInput;
    private javax.swing.JRadioButton displayAnimalGenderFemale;
    private javax.swing.JRadioButton displayAnimalGenderMale;
    private javax.swing.JTextField displayAnimalLengthInput;
    private javax.swing.JTextField displayAnimalNameInput;
    private javax.swing.JComboBox<String> displayAnimalPlaceCombo;
    private javax.swing.JRadioButton displayAnimalSterilizeNo;
    private javax.swing.JRadioButton displayAnimalSterilizeYes;
    private javax.swing.JLabel displayAnimalWarningMessage;
    private javax.swing.JTextField displayAnimalWeightInput;
    private javax.swing.JTable displayBirdTable;
    private javax.swing.JTable displayCatTable;
    private javax.swing.JTable displayDogTable;
    private javax.swing.JRadioButton displayIsAgressiveCatNo;
    private javax.swing.JRadioButton displayIsAgressiveCatYes;
    private javax.swing.JRadioButton displayIsTalkBirdNo;
    private javax.swing.JRadioButton displayIsTalkBirdYes;
    private javax.swing.JPanel displayScreenBirdPanel;
    private javax.swing.JPanel displayScreenCatPanel;
    private javax.swing.JPanel displayScreenDogPanel;
    private javax.swing.JTextField displayStrainBird;
    private javax.swing.JTextField displayStrainDog;
    private javax.swing.JLabel dogIcon;
    private javax.swing.JButton findLifeTimeButton;
    private javax.swing.JRadioButton genderFemale;
    private javax.swing.JRadioButton genderMale;
    private javax.swing.JLabel github;
    private javax.swing.JLabel healthText;
    private javax.swing.JLabel healthUpdateText;
    private javax.swing.JRadioButton isAgressiveCatNo;
    private javax.swing.JRadioButton isAgressiveCatYes;
    private javax.swing.JRadioButton isTalkBirdNo;
    private javax.swing.JRadioButton isTalkBirdYes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSlider jSliderAddHealth;
    private javax.swing.JSlider jSliderUpdateHealth;
    private javax.swing.JLabel logOutButton;
    private javax.swing.JTextField searchBar;
    private javax.swing.JRadioButton sterilizeNo;
    private javax.swing.JRadioButton sterilizeYes;
    private javax.swing.JTextField strainBird;
    private javax.swing.JTextField strainDog;
    private javax.swing.JButton updateBirdButton;
    private javax.swing.JButton updateCatButton;
    private javax.swing.JButton updateDogButton;
    // End of variables declaration//GEN-END:variables
}
